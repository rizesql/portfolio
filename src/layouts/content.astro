---
import type { Render } from "astro:content";

import MainLayout, { type Props as MainProps } from "./main.astro";

import { Link, Section, touchable, vstack } from "~/components/ui";
import type { Content } from "~/content/base-content";
import { appInfo } from "~/lib/app-info";
import { cx } from "~/lib/cx";

export interface Props extends MainProps {
	content: Content;
	links?: ReadonlyArray<{ href: string; label: string }>;
	render: Awaited<Render[".mdx"]>;
}

const {
	render,
	class: className = "",
	links = appInfo.social,
	content,
	...props
} = Astro.props;
---

<MainLayout class={className} {...props}>
	<Section.First header={content} links={links} />

	<Section.Root class="mt-32">
		<Section.Header class="text-sm lg:sticky">
			<slot name="header" />
		</Section.Header>

		<Section.SideContent class="text-2xl">
			{content.description}
		</Section.SideContent>

		<aside class="relative col-span-2 hidden pl-4 lg:block">
			<div class="sticky top-[10vh] xl:top-[20vh]">
				<h3 class="mb-4 text-lg font-medium lg:text-2xl">Table of contents</h3>
				<ul class={cx(vstack(), "lg:gap-2")}>
					{
						render.headings
							.filter((h) => 2 >= h.depth)
							.map((h) => (
								<li>
									<Link.Nav
										href={`#${h.slug}`}
										unstyled
										class={cx(touchable(), "text-xs lg:text-base")}
									>
										{h.text}
									</Link.Nav>
								</li>
							))
					}
				</ul>
			</div>
		</aside>

		<article
			class={cx(
				"prose col-span-full mx-auto lg:mx-0 lg:col-[4/span_6] lg:max-w-full prose-foreground",
				"prose-headings:scroll-m-20 prose-headings:font-medium prose-code:font-zed-mono prose-p:m-0",
			)}
		>
			<render.Content />
		</article>
	</Section.Root>
</MainLayout>

<style is:global>
	.prose {
		&
			:is(
				:where(h1, h2, h3, h4, h5, h6, th):not(
						:where([class~="not-prose"], [class~="not-prose"] *, :first-child)
					)
			) {
			margin-top: 6rem;
		}

		&
			:is(
				:where(h1, h2, h3, h4, h5, h6, th):not(
						:where([class~="not-prose"], [class~="not-prose"] *)
					)
			) {
			margin-bottom: 1rem;
		}

		& > p + p {
			margin-top: 1rem;
			margin-bottom: 0;
		}
	}
</style>
