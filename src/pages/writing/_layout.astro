---
import type { CollectionEntry } from "astro:content";
import { getCollection, getEntry } from "astro:content";
import { EncryptedText } from "~/components/encrypted-text";

import { Link, Section, hstack, vstack } from "~/components/ui";
import MainLayout, { type Props as MainProps } from "~/layouts/main.astro";
import { appInfo } from "~/lib/app-info";
import { cx } from "~/lib/cx";

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions
export interface Props extends MainProps {
	articles: ReadonlyArray<CollectionEntry<"articles">>;
	header: string;
}

const { articles: rawArticles, header, class: className, seo, ...props } = Astro.props;

const articles = await Promise.all(
	rawArticles.map((article) =>
		getEntry(article.data.topic).then((topic) => ({
			...article,
			data: { ...article.data, topic },
		})),
	),
);

const topics = await getCollection("topics");

const description =
	"Brain dumps, explorations, thoughts, roadmaps and how-to guides. I write about different topics, such as programming, backend systems, my work process, and user/dev experience." as const;
---

<MainLayout
	seo={{ ...seo, description }}
	class={cx("relative bg-writing-background text-writing-foreground", className)}
	{...props}
>
	<Section.First
		header={{ name: "Writing", subtitle: "Some thoughts" }}
		links={appInfo.social}
	>
		<aside class="col-[2/span_3]">
			<ul class={cx(vstack(), "gap-2")}>
				{
					topics.map((topic) => (
						<li class="font-medium">
							<Link.Nav href={`/writing/${topic.id === "all" ? "" : topic.id}`}>
								{topic.data.name}
							</Link.Nav>
						</li>
					))
				}
			</ul>
		</aside>

		<Section.SideContent>
			<div class="font-zed-mono text-xl">
				$ <EncryptedText client:load id="eyebrow" text="Welcome to my blog" />
			</div>
			<p>
				{description}
			</p>
		</Section.SideContent>
	</Section.First>

	<Section.Root>
		<Section.Header><h2>{header}</h2></Section.Header>
		{
			articles.map((article) => (
				<Link.Nav
					href={`/writing/${article.data.topic.id}/${article.id}`}
					class="col-[4/span_5]"
					unstyled
				>
					<article class={cx(vstack(), "gap-2")}>
						<h2 class="text-4xl font-medium">{article.data.name}</h2>

						<div class={cx(hstack({ align: "center" }), "gap-4 text-sm w-full")}>
							<time class="min-w-max">12 Jan, 2024</time>
							<div class="w-full" />
							<p>{article.data.topic.data.name}</p>
						</div>

						<p class="max-w-prose text-balance">{article.data.description}</p>
					</article>
				</Link.Nav>
			))
		}
	</Section.Root>
</MainLayout>

<style>
	#eyebrow[data-part="encrypted-text"] {
		position: relative;

		&::after {
			content: "_";
			position: absolute;
			right: -15px;
			opacity: 0;

			animation: blink 1s step-end infinite;
			animation-delay: 2s;
		}
	}

	@keyframes blink {
		0% {
			opacity: 0;
		}
		50% {
			opacity: 1;
		}
		100% {
			opacity: 0;
		}
	}
</style>
