---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import { EncryptedText } from "~/components/encrypted-text";

import ContentLayout from "~/layouts/content.astro";
import { appInfo } from "~/lib/app-info";

export const getStaticPaths = (async () => {
	const articles = await getCollection("articles");
	return articles.map((article) => ({
		params: { topic: article.data.topic.id, article: article.id },
		props: { article },
	}));
}) satisfies GetStaticPaths;

const { article } = Astro.props;
const ogImage = new URL(`/api/og/${Astro.params.article}`, Astro.site);
---

<ContentLayout
	seo={{
		title: article.data.name,
		description: article.data.description,
		ogImage: ogImage.toString(),
	}}
	class="bg-writing-background [--set-foreground:var(--writing-foreground)]"
	links={[...appInfo.social, { href: "/rss", label: "RSS feed" }]}
	content={{
		name: "Writing",
		subtitle: "Some thoughts",
		description: article.data.description,
	}}
	render={await article.render()}
>
	<Fragment slot="header">
		<h2 class="font-zed-mono">
			~/<EncryptedText client:load text={`writing/${article.id}`} />
		</h2>
		<p>{article.data.topic.id}</p>
	</Fragment>
</ContentLayout>
